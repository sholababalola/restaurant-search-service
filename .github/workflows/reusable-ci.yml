name: Reusable CI Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  build:
    name: Deploy, Test and Deploy Code
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment}}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.10.2

      - name: Test Application code
        run: |
          pip install -r app/requirements-dev.txt
          python -m unittest discover app/tests -p '*_test.py'
        env:
          PYTHONPATH: ./app:$PYTHONPATH

      - name: Package Application code
        run: |
          mkdir build
          pip install -r app/requirements.txt -t build/
          pip install --platform manylinux2014_x86_64 --target=build \
              --implementation cp --python-version 3.12 --only-binary=:all: --upgrade psycopg2-binary
          cp -R app/query app/lambda_function.py build/
          cd build
          zip -r ../service-api.zip .

          cd ..
          cp -R app/etl build/
          cd build
          zip -r ../etl.zip .

      - name: Init Terraform
        run: |
          terraform init
          terraform workspace new ${{ inputs.environment}} || true
          terraform workspace select ${{ inputs.environment}} || true
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

      - name: Terraform Plan
        run: terraform plan -var-file=${{ inputs.environment}}.tfvars
        if: github.event_name == 'pull_request'
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -var-file=${{ inputs.environment}}.tfvars -auto-approve
        working-directory: ./terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ vars.AWS_REGION }}
